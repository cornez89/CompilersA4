1,45c1,116
< // Source file: Concat.btm
< // Source line: 1
< class Main extends Object {
<     // Source line: 2
<     void main() {
<         // Source line: 3
<         String star = (/*L3,type:String*/"*");
<         // Source line: 4
<         String s1 = (/*L4,type:String*/(/*L4,type:String*/star).substring((/*L4,type:int*/0), (/*L4,type:int*/1)));
<         // Source line: 5
<         String s2 = (/*L5,type:String*/"");
<         // Source line: 6
<         int i = (/*L6,type:int*/1);
<         // Source line: 8
<         while ((/*L8,type:boolean*/(/*L8,type:int*/(/*L8,type:int*/i) * (/*L8,type:int*/2)) < (/*L8,type:int*/5000)))
<             // Source line: 8
<             {
<                 // Source line: 9
<                 (/*L9,type:String*/s1 = (/*L9,type:String*/(/*L9,type:String*/s1).concat((/*L9,type:String*/s1))));
<                 // Source line: 10
<                 (/*L10,type:TextIO*/(/*L10,type:TextIO*/(/*L10,type:TextIO*/(/*L10,type:TextIO*/(/*L10,type:TextIO*/(/*L10,type:TextIO*/new TextIO()).putString((/*L10,type:String*/"i: "))).putInt((/*L10,type:int*/i))).putString((/*L10,type:String*/", s1="))).putString((/*L10,type:String*/s1))).putString((/*L10,type:String*/"\n")));
<                 // Source line: 11
<                 (/*L11,type:int*/i = (/*L11,type:int*/(/*L11,type:int*/i) * (/*L11,type:int*/2)));
<             }
<         // Source line: 14
<         while ((/*L14,type:boolean*/(/*L14,type:int*/i) < (/*L14,type:int*/5000)))
<             // Source line: 14
<             {
<                 // Source line: 15
<                 (/*L15,type:String*/s2 = (/*L15,type:String*/(/*L15,type:String*/s2).concat((/*L15,type:String*/star))));
<                 // Source line: 16
<                 (/*L16,type:int*/i = (/*L16,type:int*/(/*L16,type:int*/i) + (/*L16,type:int*/1)));
<             }
<         // Source line: 19
<         (/*L19,type:String*/s1 = (/*L19,type:String*/(/*L19,type:String*/s1).concat((/*L19,type:String*/s2))));
<         // Source line: 20
<         (/*L20,type:TextIO*/(/*L20,type:TextIO*/(/*L20,type:TextIO*/(/*L20,type:TextIO*/(/*L20,type:TextIO*/(/*L20,type:TextIO*/new TextIO()).putString((/*L20,type:String*/"i: "))).putInt((/*L20,type:int*/i))).putString((/*L20,type:String*/", s1="))).putString((/*L20,type:String*/s1))).putString((/*L20,type:String*/"\n")));
<         // Source line: 22
<         (/*L22,type:String*/s1 = (/*L22,type:String*/(/*L22,type:String*/s1).concat((/*L22,type:String*/star))));
<         // Source line: 23
<         (/*L23,type:TextIO*/(/*L23,type:TextIO*/(/*L23,type:TextIO*/(/*L23,type:TextIO*/(/*L23,type:TextIO*/(/*L23,type:TextIO*/new TextIO()).putString((/*L23,type:String*/"i: "))).putInt((/*L23,type:int*/i))).putString((/*L23,type:String*/", s1="))).putString((/*L23,type:String*/s1))).putString((/*L23,type:String*/"\n")));
<         // Source line: 25
<         return;
<     }
< }
---
> 
> C:\Users\ZachA\OneDrive - University of Wisconsin Oshkosh\Spring 2025\CS 431\a4\tests>java -classpath "C:\Users\ZachA\OneDrive - University of Wisconsin Oshkosh\Spring 2025\CS 431\a4\src" Main Concat.btm 
> class: String value: util.ClassTreeNode@34a245ab
> class: Object value: util.ClassTreeNode@7cc355be
> class: Sys value: util.ClassTreeNode@6e8cf4c6
> class: Main value: util.ClassTreeNode@12edcd21
> class: TextIO value: util.ClassTreeNode@34c45dca
> Main
> Class: Object
> Entered Scope, scopes = 0
> Entered Scope, scopes = 0
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Scope level 2, contains:
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Class: Object
> Entered Scope, scopes = 2
> Entered Scope, scopes = 2
> Scope level 3, contains:
> Class: Object
> Exited Scope, scopes = 3
> Exited Scope, scopes = 3
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Exited Scope, scopes = 1
> Exited Scope, scopes = 1
> Curr Class: Object, num of children: 1ClassTreeNode
> Class: Object
> Entered Scope, scopes = 0
> Entered Scope, scopes = 0
> Method
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Method
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Curr Class: Main, num of children: 0ClassTreeNode
> Class: Main
> Entered Scope, scopes = 0
> Entered Scope, scopes = 0
> Method
> Class: Main
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Scope level 2, contains:
> Scope level 2, contains:
> key: star, value String
> Scope level 2, contains:
> key: this.star, value String
> key: star, value String
> Scope level 2, contains:
> key: s1, value String
> key: this.star, value String
> key: star, value String
> Scope level 2, contains:
> key: this.s1, value String
> key: s1, value String
> key: this.star, value String
> key: star, value String
> Scope level 2, contains:
> key: this.s1, value String
> key: s2, value String
> key: s1, value String
> key: this.star, value String
> key: star, value String
> Scope level 2, contains:
> key: this.s2, value String
> key: this.s1, value String
> key: s2, value String
> key: s1, value String
> key: this.star, value String
> key: star, value String
> Scope level 2, contains:
> key: this.s2, value String
> key: this.s1, value String
> key: s2, value String
> key: i, value int
> key: s1, value String
> key: this.star, value String
> key: star, value String
> java.lang.RuntimeException: Error in BinaryArithTimesExpr: Left Operand must be of type int, given type: null.
>         at visitor.TypeCheckVisitor.binaryArithExpr(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.BinaryArithTimesExpr.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.binaryCompExpr(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.BinaryCompLtExpr.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.WhileStmt.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.StmtList.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.Method.accept(Unknown Source)
>         at visitor.Visitor.visit(Unknown Source)
>         at ast.MemberList.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.Class_.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at semant.SemanticAnalyzer.typeCheck(Unknown Source)
>         at semant.SemanticAnalyzer.analyze(Unknown Source)
>         at Main.main(Unknown Source)
> Internal error within compiler: stopping compilation
