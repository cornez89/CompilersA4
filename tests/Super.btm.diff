1,71c1,123
< // Source file: Super.btm
< // Source line: 1
< class A extends Object {
<     // Source line: 2
<     TextIO io = 
< (/*L2,type:TextIO*/new TextIO());
<     // Source line: 3
<     String name;
<     // Source line: 4
<     void setName() {
<         // Source line: 5
<         (/*L5,type:String*/this.name = (/*L5,type:String*/"A"));
<         // Source line: 6
<         return;
<     }
<     // Source line: 8
<     void foo() {
<         // Source line: 9
<         (/*L9,type:TextIO*/(/*L9,type:TextIO*/(/*L9,type:TextIO*/(/*L9,type:TextIO*/io).putString((/*L9,type:String*/"Static type = A, dynamic type = "))).putString((/*L9,type:String*/name))).putString((/*L9,type:String*/"\n")));
<         // Source line: 10
<         return;
<     }
< }
< // Source file: Super.btm
< // Source line: 14
< class B extends A {
<     // Source line: 15
<     String name;
<     // Source line: 16
<     void setName() {
<         // Source line: 17
<         (/*L17,type:String*/super.name = (/*L17,type:String*/"B"));
<         // Source line: 18
<         return;
<     }
<     // Source line: 20
<     void foo() {
<         // Source line: 21
<         (/*L21,type:TextIO*/(/*L21,type:TextIO*/(/*L21,type:TextIO*/(/*L21,type:TextIO*/io).putString((/*L21,type:String*/"Static type = B, dynamic type = "))).putString((/*L21,type:String*/name))).putString((/*L21,type:String*/"\n")));
<         // Source line: 22
<         (/*L22,type:void*/(/*L22,type:A*/super).foo());
<         // Source line: 23
<         return;
<     }
< }
< // Source file: Super.btm
< // Source line: 27
< class C extends B {
<     // Source line: 28
<     void setName() {
<         // Source line: 29
<         (/*L29,type:String*/this.name = (/*L29,type:String*/"C"));
<         // Source line: 30
<         return;
<     }
< }
< // Source file: Super.btm
< // Source line: 34
< class Main extends Object {
<     // Source line: 35
<     void main() {
<         // Source line: 36
<         C c = (/*L36,type:C*/new C());
<         // Source line: 37
<         (/*L37,type:void*/(/*L37,type:C*/c).setName());
<         // Source line: 38
<         (/*L38,type:void*/(/*L38,type:C*/c).foo());
<         // Source line: 39
<         return;
<     }
< }
---
> 
> C:\Users\ZachA\OneDrive - University of Wisconsin Oshkosh\Spring 2025\CS 431\a4\tests>java -classpath "C:\Users\ZachA\OneDrive - University of Wisconsin Oshkosh\Spring 2025\CS 431\a4\src" Main Super.btm 
> class: A value: util.ClassTreeNode@27d6c5e0
> class: String value: util.ClassTreeNode@4f3f5b24
> class: Object value: util.ClassTreeNode@15aeb7ab
> class: Sys value: util.ClassTreeNode@7b23ec81
> class: Main value: util.ClassTreeNode@6acbcfc0
> class: TextIO value: util.ClassTreeNode@5f184fc6
> class: C value: util.ClassTreeNode@3feba861
> class: B value: util.ClassTreeNode@5b480cf9
> A
> B
> C
> Main
> Class: Object
> Entered Scope, scopes = 0
> Entered Scope, scopes = 0
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Scope level 2, contains:
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Class: Object
> Entered Scope, scopes = 2
> Entered Scope, scopes = 2
> Scope level 3, contains:
> Scope level 3, contains:
> key: io, value TextIO
> Scope level 3, contains:
> Scope level 3, contains:
> key: setName, value ast.Method@300ffa5d
> Class: Object
> Exited Scope, scopes = 3
> Exited Scope, scopes = 3
> Class: Object
> Entered Scope, scopes = 2
> Entered Scope, scopes = 2
> Class: Object
> Entered Scope, scopes = 3
> Entered Scope, scopes = 3
> Scope level 4, contains:
> Scope level 4, contains:
> Scope level 4, contains:
> key: setName, value ast.Method@1f17ae12
> Class: Object
> Exited Scope, scopes = 4
> Exited Scope, scopes = 4
> Class: Object
> Entered Scope, scopes = 3
> Entered Scope, scopes = 3
> Class: Object
> Entered Scope, scopes = 4
> Entered Scope, scopes = 4
> Scope level 5, contains:
> Class: Object
> Exited Scope, scopes = 5
> Exited Scope, scopes = 5
> Class: Object
> Exited Scope, scopes = 4
> Exited Scope, scopes = 4
> Class: Object
> Exited Scope, scopes = 3
> Exited Scope, scopes = 3
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Class: Object
> Entered Scope, scopes = 2
> Entered Scope, scopes = 2
> Scope level 3, contains:
> Class: Object
> Exited Scope, scopes = 3
> Exited Scope, scopes = 3
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Exited Scope, scopes = 1
> Exited Scope, scopes = 1
> Curr Class: Object, num of children: 2ClassTreeNode
> Class: Object
> Entered Scope, scopes = 0
> Entered Scope, scopes = 0
> Method
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Method
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Curr Class: A, num of children: 1ClassTreeNode
> Class: A
> Entered Scope, scopes = 0
> Entered Scope, scopes = 0
> java.lang.NullPointerException: Cannot invoke "Object.hashCode()" because "key" is null
>         at java.base/java.util.Hashtable.get(Hashtable.java:381)
>         at util.ClassTreeNode.lookupClass(Unknown Source)
>         at visitor.SemantVisitor.typeExists(Unknown Source)
>         at visitor.SemantVisitor.conformsTo(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.Field.accept(Unknown Source)
>         at visitor.Visitor.visit(Unknown Source)
>         at ast.MemberList.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.Class_.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at semant.SemanticAnalyzer.typeCheck(Unknown Source)
>         at semant.SemanticAnalyzer.analyze(Unknown Source)
>         at Main.main(Unknown Source)
> Internal error within compiler: stopping compilation
