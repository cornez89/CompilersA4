1,77c1,116
< // Source file: CountDivisors.btm
< // Source line: 5
< class Main extends Object {
<     // Source line: 7
<     void main() {
<         // Source line: 8
<         TextIO io = (/*L8,type:TextIO*/new TextIO());
<         // Source line: 9
<         int upperBound = (/*L9,type:int*/1);
<         // Source line: 10
<         int numWithMostDivisors = (/*L10,type:int*/0);
<         // Source line: 11
<         int maxDivisors = (/*L11,type:int*/0);
<         // Source line: 13
<         (/*L13,type:int*/upperBound = (/*L13,type:int*/(/*L13,type:TextIO*/(/*L13,type:TextIO*/io).putString((/*L13,type:String*/"Enter a number >= 1: "))).getInt()));
<         // Source line: 14
<         if ((/*L14,type:boolean*/(/*L14,type:int*/upperBound) < (/*L14,type:int*/1)))
<             // Source line: 14
<             {
<                 // Source line: 15
<                 (/*L15,type:TextIO*/(/*L15,type:TextIO*/io).putString((/*L15,type:String*/"Number must be >= 1")));
<                 // Source line: 16
<                 (/*L16,type:void*/(/*L16,type:Sys*/new Sys()).exit((/*L16,type:int*/1)));
<             }
<         else
<             // Source line: 14
<             {
<             }
<         // Source line: 20
<         int i = (/*L20,type:int*/1);
<         // Source line: 21
<         while ((/*L21,type:boolean*/(/*L21,type:int*/i) <= (/*L21,type:int*/upperBound)))
<             // Source line: 21
<             {
<                 // Source line: 23
<                 int numDivisors = (/*L23,type:int*/0);
<                 // Source line: 24
<                 int j = (/*L24,type:int*/1);
<                 // Source line: 25
<                 while ((/*L25,type:boolean*/(/*L25,type:int*/j) <= (/*L25,type:int*/i)))
<                     // Source line: 25
<                     {
<                         // Source line: 27
<                         if ((/*L27,type:boolean*/(/*L27,type:int*/(/*L27,type:int*/i) % (/*L27,type:int*/j)) == (/*L27,type:int*/0)))
<                             // Source line: 28
<                             (/*L28,type:int*/numDivisors = (/*L28,type:int*/(/*L28,type:int*/numDivisors) + (/*L28,type:int*/1)));
<                         else
<                             // Source line: 27
<                             {
<                             }
<                         // Source line: 29
<                         (/*L29,type:int*/j = (/*L29,type:int*/(/*L29,type:int*/j) + (/*L29,type:int*/1)));
<                     }
<                 // Source line: 34
<                 if ((/*L34,type:boolean*/(/*L34,type:int*/numDivisors) > (/*L34,type:int*/maxDivisors)))
<                     // Source line: 34
<                     {
<                         // Source line: 35
<                         (/*L35,type:int*/numWithMostDivisors = (/*L35,type:int*/i));
<                         // Source line: 36
<                         (/*L36,type:int*/maxDivisors = (/*L36,type:int*/numDivisors));
<                     }
<                 else
<                     // Source line: 34
<                     {
<                     }
<                 // Source line: 39
<                 (/*L39,type:int*/i = (/*L39,type:int*/(/*L39,type:int*/i) + (/*L39,type:int*/1)));
<             }
<         // Source line: 43
<         (/*L43,type:TextIO*/(/*L43,type:TextIO*/(/*L43,type:TextIO*/(/*L43,type:TextIO*/io).putString((/*L43,type:String*/"Number with most divisors: "))).putInt((/*L43,type:int*/numWithMostDivisors))).putString((/*L43,type:String*/"\n")));
<         // Source line: 44
<         (/*L44,type:TextIO*/(/*L44,type:TextIO*/(/*L44,type:TextIO*/(/*L44,type:TextIO*/io).putString((/*L44,type:String*/"Number of divisors: "))).putInt((/*L44,type:int*/maxDivisors))).putString((/*L44,type:String*/"\n")));
<         // Source line: 46
<         return;
<     }
< }
---
> 
> C:\Users\ZachA\OneDrive - University of Wisconsin Oshkosh\Spring 2025\CS 431\a4\tests>java -classpath "C:\Users\ZachA\OneDrive - University of Wisconsin Oshkosh\Spring 2025\CS 431\a4\src" Main CountDivisors.btm 
> class: String value: util.ClassTreeNode@34c45dca
> class: Object value: util.ClassTreeNode@52cc8049
> class: Sys value: util.ClassTreeNode@5b6f7412
> class: Main value: util.ClassTreeNode@27973e9b
> class: TextIO value: util.ClassTreeNode@312b1dae
> Main
> Class: Object
> Entered Scope, scopes = 0
> Entered Scope, scopes = 0
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Scope level 2, contains:
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Class: Object
> Entered Scope, scopes = 2
> Entered Scope, scopes = 2
> Scope level 3, contains:
> Class: Object
> Exited Scope, scopes = 3
> Exited Scope, scopes = 3
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Exited Scope, scopes = 1
> Exited Scope, scopes = 1
> Curr Class: Object, num of children: 1ClassTreeNode
> Class: Object
> Entered Scope, scopes = 0
> Entered Scope, scopes = 0
> Method
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Method
> Class: Object
> Exited Scope, scopes = 2
> Exited Scope, scopes = 2
> Class: Object
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Curr Class: Main, num of children: 0ClassTreeNode
> Class: Main
> Entered Scope, scopes = 0
> Entered Scope, scopes = 0
> Method
> Class: Main
> Entered Scope, scopes = 1
> Entered Scope, scopes = 1
> Scope level 2, contains:
> Scope level 2, contains:
> key: io, value TextIO
> Scope level 2, contains:
> key: this.io, value TextIO
> key: io, value TextIO
> Scope level 2, contains:
> key: this.io, value TextIO
> key: upperBound, value int
> key: io, value TextIO
> Scope level 2, contains:
> key: this.upperBound, value int
> key: this.io, value TextIO
> key: upperBound, value int
> key: io, value TextIO
> Scope level 2, contains:
> key: numWithMostDivisors, value int
> key: this.upperBound, value int
> key: this.io, value TextIO
> key: upperBound, value int
> key: io, value TextIO
> Scope level 2, contains:
> key: this.numWithMostDivisors, value int
> key: numWithMostDivisors, value int
> key: this.upperBound, value int
> key: this.io, value TextIO
> key: upperBound, value int
> key: io, value TextIO
> Scope level 2, contains:
> key: this.numWithMostDivisors, value int
> key: numWithMostDivisors, value int
> key: this.upperBound, value int
> key: maxDivisors, value int
> key: this.io, value TextIO
> key: upperBound, value int
> key: io, value TextIO
> java.lang.NullPointerException: Cannot invoke "Object.hashCode()" because "key" is null
>         at java.base/java.util.Hashtable.get(Hashtable.java:381)
>         at util.ClassTreeNode.lookupClass(Unknown Source)
>         at visitor.SemantVisitor.typeExists(Unknown Source)
>         at visitor.SemantVisitor.conformsTo(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.AssignExpr.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.ExprStmt.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.StmtList.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.Method.accept(Unknown Source)
>         at visitor.Visitor.visit(Unknown Source)
>         at ast.MemberList.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at ast.Class_.accept(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at visitor.TypeCheckVisitor.visit(Unknown Source)
>         at semant.SemanticAnalyzer.typeCheck(Unknown Source)
>         at semant.SemanticAnalyzer.analyze(Unknown Source)
>         at Main.main(Unknown Source)
> Internal error within compiler: stopping compilation
