/* Generated By:JavaCC: Do not edit this line. ParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface ParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 1;
  /** RegularExpression Id. */
  int EXTENDS = 2;
  /** RegularExpression Id. */
  int FOR = 3;
  /** RegularExpression Id. */
  int WHILE = 4;
  /** RegularExpression Id. */
  int IF = 5;
  /** RegularExpression Id. */
  int ELSE = 6;
  /** RegularExpression Id. */
  int RETURN = 7;
  /** RegularExpression Id. */
  int BREAK = 8;
  /** RegularExpression Id. */
  int NEW = 9;
  /** RegularExpression Id. */
  int INSTANCEOF = 10;
  /** RegularExpression Id. */
  int LBRACE = 11;
  /** RegularExpression Id. */
  int RBRACE = 12;
  /** RegularExpression Id. */
  int LBRACK = 13;
  /** RegularExpression Id. */
  int RBRACK = 14;
  /** RegularExpression Id. */
  int LENGTH = 15;
  /** RegularExpression Id. */
  int LPARAN = 16;
  /** RegularExpression Id. */
  int RPARAN = 17;
  /** RegularExpression Id. */
  int COMMA = 18;
  /** RegularExpression Id. */
  int SEMICOLON = 19;
  /** RegularExpression Id. */
  int PERIOD = 20;
  /** RegularExpression Id. */
  int PLUS = 21;
  /** RegularExpression Id. */
  int MINUS = 22;
  /** RegularExpression Id. */
  int TIMES = 23;
  /** RegularExpression Id. */
  int DIVIDE = 24;
  /** RegularExpression Id. */
  int MODULO = 25;
  /** RegularExpression Id. */
  int ASSIGN = 26;
  /** RegularExpression Id. */
  int EQUALS = 27;
  /** RegularExpression Id. */
  int NOT_EQUALS = 28;
  /** RegularExpression Id. */
  int LESS_THAN = 29;
  /** RegularExpression Id. */
  int GREATER_THAN = 30;
  /** RegularExpression Id. */
  int GREATER_EQUAL = 31;
  /** RegularExpression Id. */
  int LESS_EQUAL = 32;
  /** RegularExpression Id. */
  int NOT = 33;
  /** RegularExpression Id. */
  int AND = 34;
  /** RegularExpression Id. */
  int OR = 35;
  /** RegularExpression Id. */
  int XOR = 36;
  /** RegularExpression Id. */
  int INCREMENT = 37;
  /** RegularExpression Id. */
  int DECREMENT = 38;
  /** RegularExpression Id. */
  int UNTERMINATED_MULTI_LINE_COMMENT = 39;
  /** RegularExpression Id. */
  int UNTERMINATED_STRING_CONSTANT = 40;
  /** RegularExpression Id. */
  int INT_CONST = 41;
  /** RegularExpression Id. */
  int BOOLEAN_CONST = 42;
  /** RegularExpression Id. */
  int STRING_CONST = 43;
  /** RegularExpression Id. */
  int ID = 44;
  /** RegularExpression Id. */
  int UNSUPPORTED = 48;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"class\"",
    "\"extends\"",
    "\"for\"",
    "\"while\"",
    "\"if\"",
    "\"else\"",
    "\"return\"",
    "\"break\"",
    "\"new\"",
    "\"instanceof\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\".length\"",
    "\"(\"",
    "\")\"",
    "\",\"",
    "\";\"",
    "\".\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\">\"",
    "\">=\"",
    "\"<=\"",
    "\"!\"",
    "\"&&\"",
    "\"||\"",
    "\"^\"",
    "\"++\"",
    "\"--\"",
    "\"/*\"",
    "<UNTERMINATED_STRING_CONSTANT>",
    "<INT_CONST>",
    "<BOOLEAN_CONST>",
    "<STRING_CONST>",
    "<ID>",
    "<token of kind 45>",
    "<token of kind 46>",
    "<token of kind 47>",
    "<UNSUPPORTED>",
  };

}
